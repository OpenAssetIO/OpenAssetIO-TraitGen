{% if copyrightOwner -%}
# SPDX-License-Identifier: {{ spdxLicenseIdentifier }}
# Copyright {{ copyrightDate }} {{ copyrightOwner }}
{% endif %}
"""
Specification definitions in the '{{ namespace.id }}' namespace.

{{ namespace.description | wordwrap(72) }}
"""

# WARNING: This file is auto-generated by openassetio-traitgen, do not edit.

from openassetio import SpecificationBase

{% if imports -%}
{% for import in imports -%}
{% if import != package.id -%}
import {{ import | to_py_module_name }}
{% endif -%}
{% endfor -%}
{% endif %}
{% if package.id in imports -%}
from .. import traits
{% endif %}

{% for specification in namespace.members %}
class {{ specification.id | to_py_class_name }}Specification(SpecificationBase):
    """
    {{ specification.description | wordwrap(68) | indent(4) }}
    {% if specification.usage -%}
    Usage: {{ specification.usage | join(', ') }}
    {% endif -%}
    """
    kTraitSet = {
        {% for trait in specification.trait_set -%}
        # '{{ trait.id }}'
        {% if trait.package == package.id -%}
        traits.{{ trait.namespace | to_py_module_name }}.{{ trait.name | to_py_class_name }}Trait.kId,
        {% else -%}
        {{ trait.package | to_py_module_name }}.traits.{{ trait.namespace | to_py_module_name }}.{{ trait.name | to_py_class_name }}Trait.kId,
        {% endif -%}
        {% endfor %}
    }

{% for trait in specification.trait_set %}
    def {{ trait.unique_name_parts | to_py_trait_accessor_name }}Trait(self):
        """
        Returns the view for the '{{ trait.id }}' trait wrapped around
        the data held in this instance.
        """
        {% if trait.package == package.id -%}
        return traits.{{trait.namespace | to_py_module_name }}.{{ trait.name | to_py_class_name }}Trait(self.traitsData())
        {% else -%}
        return {{ trait.package | to_py_module_name }}.traits.{{trait.namespace | to_py_module_name }}.{{ trait.name | to_py_class_name }}Trait(self.traitsData())
        {% endif -%}


{% endfor -%}


{% endfor -%}
